#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 2013-2014 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Oracle. Portions Copyright 2013-2016 Oracle. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.
#

MSG_Completion_GET=The GET method means retrieve whatever information \
 (in the form of an entity) is identified by the Request-URI. \
 If the Request-URI refers to a data-producing process, \
 it is the produced data which shall be returned as the entity in \
 the response and not the source text of the process, \
 unless that text happens to be the output of the process.

MSG_Completion_HEAD=The HEAD method is identical to GET except that the server \
 MUST NOT return a message-body in the response. The metainformation \
 contained in the HTTP headers in response to a HEAD request SHOULD be \
 identical to the information sent in response to a GET request. \
 This method can be used for obtaining metainformation about the entity implied \
 by the request without transferring the entity-body itself. \
 This method is often used for testing hypertext links for validity, \
 accessibility, and recent modification.

MSG_Completion_POST=The POST method is used to request that the origin server \
 accept the entity enclosed in the request as a new subordinate of the resource \
 identified by the Request-URI in the Request-Line. POST is designed to allow \
 a uniform method to cover annotation of existing resources,\ 
 posting a message to a bulletin board, newsgroup, mailing list, or similar \
 group of articles, providing a block of data, such as the result of submitting a \
 form, to a data-handling process or extending a database through an append operation. \
 The actual function performed by the POST method is determined by the server \
 and is usually dependent on the Request-URI. The posted entity is subordinate \
 to that URI in the same way that a file is subordinate to a directory containing it, \
 a news article is subordinate to a newsgroup to which it is posted, \
 or a record is subordinate to a database.

MSG_Completion_PUT=The PUT method requests that the enclosed entity be stored \
 under the supplied Request-URI. If the Request-URI refers to an already \
 existing resource, the enclosed entity SHOULD be considered as a modified \
 version of the one residing on the origin server. If the Request-URI does \
 not point to an existing resource, and that URI is capable of being defined \
 as a new resource by the requesting user agent, the origin server can \
 create the resource with that URI. If a new resource is created, the origin \
 server MUST inform the user agent via the 201 (Created) response. \
 If an existing resource is modified, either the 200 (OK) or 204 (No Content) \
 response codes SHOULD be sent to indicate successful completion of the request. \
 If the resource could not be created or modified with the Request-URI, an \
 appropriate error response SHOULD be given that reflects the nature of the problem. \
 The recipient of the entity MUST NOT ignore any Content-* (e.g. Content-Range) \
 headers that it does not understand or implement and MUST return \
 a 501 (Not Implemented) response in such cases.

MSG_Completion_DELETE=The DELETE method requests that the origin server delete \
 the resource identified by the Request-URI. This method MAY be overridden \
 by human intervention (or other means) on the origin server. The client \
 cannot be guaranteed that the operation has been carried out, even if \
 the status code returned from the origin server indicates that the action \
 has been completed successfully. However, the server SHOULD NOT indicate \
 success unless, at the time the response is given, it intends to delete \
 the resource or move it to an inaccessible location.

